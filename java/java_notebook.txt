52集
多态: Parent p = new Child();
说明：实现多态的技术称为动态绑定（dynamic binding），是指在执行期间判断所引用对象的实际类型，根据其实际的类型调用其相应的方法。
1. 多态是一种运行期的行为，不是编译期的行为。
2. ***当使用多态方式调用方法时，首先检查父类中是否有该方法，如果没有，则编译错误；如果有，再去调用子类的该同名方法。
3. 静态方法只能继承，不能重写Override，如果子类中定义了同名同形式的静态方法，它对父类方法只起到隐藏的作用。
   调用的时候用谁的引用，则调用谁的版本。
4. 如果想要调用子类中有而父类中没有的方法，需要进行强制类型转换;
5. 回调或模板函数就是使用多态的例子。
6. 针对接口编程也是多态的例子。


private/缺省/protected/publid访问权限
1、private修饰词，表示成员是私有的，只有自身可以访问；   
2、protected，表示受保护权限，体现在继承，即子类可以访问父类受保护成员，同时相同包内的其他类也可以访问protected成员。   
3、无修饰词（默认），表示包访问权限（friendly， java语言中是没有friendly这个修饰符的，这样称呼应该是来源于c++ ），
   同一个包内可以访问，访问权限是包级访问权限；  
4、public修饰词，表示成员是公开的，所有其他类都可以访问；

override
1、子类方法不能缩小父类方法的访问权限。
2、子类方法不能抛出比父类方法更多的异常(但子类方法可以不抛出异常)。

java初始化规则
一个类是先初始化static的变量和static句块，然后在分配该类以及父类的成员变量的内存空间，赋予默认值，然后开始调用构造函数。
而子类和父类之间，则先初始化和创建父类，然后在初始化和创建子类的。

java默认值
JVM将为类的instance和static变量赋上缺省值（默认值），包括数组array中的每一个元素－－而不用再写初始化赋值语句。
切记：局部变量是没有缺省值的，必须手动初始化！
这一缺省赋值过程是在对象的构造函数调用之前完成的，如果程序写了对instance和static变量的赋初值语句，
且给的值就是JVM默认的值，那么无疑是画蛇添足，重复劳动了一遍。